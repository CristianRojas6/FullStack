ANGULAR 

	debemos tener instalado nodejs para tener acceso a npm
	Comando de instalación de Angular
	npm install -g @angular/cli@latest
	ng -v
	ng --version
	
	Would you like to... Google privacy politics? (s/n) n
	
	CLI -> commando line interface. Nos provee una serie de librerías y paquetes 
	propios de Angular para poder ejecutar correctamente un proyecto. 
	A su vez nos brinda una serie de comandos para crear componentes desde la consola
	
	Framework Fronted de JavaScript cuya sintaxis se basa en TypeScript, que nos permite crear SPA (Single Page Aplication).
	Es creado por Google, maneja MVC o MVW (Model, View, Whatever) a partir de componentes (Cada elemento HTML que creamos).
	
	* Es mucho más robusto que Vue y React
	* Se utiliza para proyectos de gran escalabilidad debido a su robustez y el manejo de MVC
	* Ideal para mantenimiento y creación de aplicativos web tipo onepage, landingpage.
	* Permite crear plantillas de forma eficaz gracias al comando de CLI
	* Angular ejecuta la vista (renderiza) desde cualquier tecnología backend como php, java
		node, .net, etc consumiendo "servicios". Angular renderiza de mejor manera y más óptima
		cada interfaz.
	
	¿Qué es TypeScript?
	Es un superconjunto basado en JavaScript. Podemos definirlo como una expansión de JS
	que nos permite controlar el tipo de datos de nuestra lógica (variables, parámetros) y
	manejar POO de forma más eficaz.
	.ts compila directamente a un archivo .js
	
	Ventajas
		-Fuertemente tipado
		
		//JavaScript		//TypeScript
		
		var nombre		var nombre : any
		var unidad = 10	var unidad : Number = 10
		
		-Los errores en TS se muestran en desarrollo en la consola del editor de código 
		mientras que los errores de JS se muestran en producción en la consola
		del navegador
		
		
	Crear nuestro primer proyecto de Angular
		ng new primer-clase
		
	Inicializar el servidor
	
		->ng serve 
		->ng serve --open 
		->npm start 
	Angular 7 ->
	Creación de componente (manual / comando)
	Data Binding (interpolación de datos - string interpolation
			one way
			two way)
	template variable
	directivas (*ngif, *ngfor, *ngswitch)
	servicios
	rutas

Buenas practicas

	ordenar en angular con el nombre de lo que se va a realizar ya que vamos a tener muchos archivos
	ej.
		.components.html, .components.css, etc

pasos

1) Crear la carpteta components y dentro de ella un crear los componentes
	.components.html, .components.css & components.ts

2)Crear la estructura del .components.html
	configurar el archivo .ts

	2.1) Se declara el nombre de la meta etiqueta que se encargará de renderizar 
		el html del componente (atributo selector)
		Se indica  la plantilla o estructura de html a utilizar (atributo tamplateUrl)
		Se indican los estilos que el componente utilizará (atributo stylesUrls)
	
	2.2)Exportamos el componente como una clase, respetando el UpperCamelCase

3) Nos dirigimos al archivo app.modules.ts donde debemos importar el componente,
	e indicarle su respectiva declaración. Al ser un componente, debe ser 
	anexado al arreglo declarations

4) Agregar la meta etiqueta  del componente que hemos creado al componente principal
	o al componente que deseemos que lo contengan.


inicio
genero

	rock
	regaae
	pop
contacto

Estando ubicados en la carpeta del proyecto de angular (primera-clase)
Debemos tumbar el servidor

ng generate component components/genero
ng generate component components/rock
ng generate component components/regaae
ng generate component components/pop
ng generate component components/contacto

ng generate c carpeta/componente

ng destroy component carpeta/componente  //Si no funciona toca eliminarlo manualmente

Decorador -> Recibe un JSON que se encarga de recibir y configurar 
			las caracteristicas de un componente

Que es el actionscript?